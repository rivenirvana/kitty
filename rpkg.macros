#!/bin/bash

# backward compat since cached function went away
# https://pagure.io/rpkg-util/c/bb62554c62fd52224709e861c2353a5c15b50220?branch=master
function cached {
    declare v=${OUTPUT[$1]}
    [[ -n $v ]] && echo -n "$v"
}

function git_revision {
    cached git_revision && return

    # find last merge
    declare last_merge rest
    read last_merge rest <<<"$(git log --merges --oneline -n1)"
    [[ -n $last_merge ]] || abort "failed to find last merge"

    # count commits since last merge, might be zero
    declare count
    count=$(git log --oneline HEAD "^$last_merge" | wc -l)

    output "$((count + 1))"
}

function git_log_tag {
    cached git_log_version && return

    declare changelog_version
    changelog_version="$(awk '$1 ~ /^[0-9]+\./ && $2 ~ /^\[/{print; exit}' < docs/changelog.rst)"

    output "$changelog_version"
}

function git_version {
    cached git_version && return

    declare version label
    read version label <<< "$(git_log_tag)"

    output "$version"
}

function git_release {
    cached git_release && return

    declare version label
    read version label <<< "$(git_log_tag)"

    declare describe tag commits hash prefix
    describe=$(git describe --first-parent origin/master)
    read tag commits hash <<< "${describe//-/ }"

    [[ -z "${commits}" ]] && commits=0
    [[ -n "${hash}" ]] && hash=".${hash}"
    [[ "${label}" == '[future]' ]] && prefix='future' || prefix='stable'

    output "${prefix}.${commits}.$(git_revision)${hash}"
}

function git_changelog_date {
    cached git_changelog_date && return
    output "$(date +'%a %b %d %Y')"
}
