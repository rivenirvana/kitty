#!/bin/bash

# backward compat since cached function went away
# https://pagure.io/rpkg-util/c/bb62554c62fd52224709e861c2353a5c15b50220?branch=master
function cached {
    declare v=${OUTPUT[$1]}
    [[ -n $v ]] && echo -n "$v"
}

function git_version {
    cached git_version && return

    # git describe --first-parent origin/master
    # v0.4.0-1080-g971e0ca90
    declare master_describe master_tag master_commits master_hash
    master_describe=$(git describe --first-parent origin/master)
    read master_tag master_commits master_hash <<<"${master_describe//-/ }"

    # get the future kitty version from the changelog
    declare changelog_version v x rest
    changelog_version="$(awk '$1 ~ /^[0-9]+\./ && $2 ~ /^\[/{print; exit}' < docs/changelog.rst)"
    read v x rest <<<"$changelog_version"

    if [[ $master_tag == v* && $master_commits -gt 0 && -n $master_hash ]]
    then
        # remove brackets from $x
        x=${x#\[}; x=${x%\]}
    else
        x="nightly"
        master_hash=$(git rev-parse --short origin/master)
    fi

    case $x in
        future)
            v="$v~$x.${master_commits}.${master_hash}" ;;
        2???-??-??)
            v="$v.0.git.${master_commits}.${master_hash}" ;;
        nightly)
            v="$v~$x.$(date +'%y%m%d').${master_hash}" ;;
    esac

    output "$v"
}

function git_revision {
    cached git_revision && return

    # count commits not on master
    output "$(git log --oneline origin/master.. | wc -l)"
}

function git_changelog_date {
    cached git_changelog_date && return
    output "$(date +'%a %b %d %Y')"
}

function git_changelog_version {
    cached git_changelog_version && return
    git_version &>/dev/null # cache
    git_revision &>/dev/null # cache
    output "$(git_version)-$(git_revision)"
}
